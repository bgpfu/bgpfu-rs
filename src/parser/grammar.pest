WHITESPACE = _{ " " | "\t" | NEWLINE }
char = { ASCII_ALPHANUMERIC }
extchar = { char | "_" | "-" }

num = @{ ASCII_DIGIT+ }
name = @{ char ~ extchar* }

any_route = @{ ^"ANY" }
peeras = @{ ^"PeerAS" }

autnum = @{ ^"AS" ~ num }

set_comp = @{ autnum | peeras }

as_set = @{ ( set_comp ~ ":" )* ~ as_set_name ~ ( ":" ~ ( set_comp | as_set_name ) )* }
    as_set_name = @{ ^"AS-" ~ extchar+ }

route_set = @{ ( set_comp ~ ":" )* ~ route_set_name ~ ( ":" ~ ( set_comp | route_set_name ) )* }
    route_set_name = @{ ^"RS-" ~ extchar+ }

filter_set = @{ ( set_comp ~ ":" )* ~ filter_set_name ~ ( ":" ~ ( set_comp | filter_set_name ) )* }
    filter_set_name = @{ ^"FLTR-" ~ extchar+ }

ipv4_prefix = @{ ipv4_addr ~ "/" ~ ipv4_prefix_len }
    ipv4_addr = @{ ipv4_oct ~ ( "." ~ ipv4_oct ){3} }
    ipv4_oct = @{ ASCII_DIGIT{1,3} }
    ipv4_prefix_len = @{ ASCII_DIGIT{1,2} }
ipv6_prefix = @{ ipv6_addr ~ "/" ~ ipv6_prefix_len }
    ipv6_addr = @{
                                                     ( ipv6_seg ~ ":" ){ 7} ~ ipv6_seg
        |                                     "::" ~ ( ipv6_seg ~ ":" ){,6} ~ ipv6_seg
        | ipv6_seg ~                          "::" ~ ( ipv6_seg ~ ":" ){,5} ~ ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,1} ~ "::" ~ ( ipv6_seg ~ ":" ){,4} ~ ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,2} ~ "::" ~ ( ipv6_seg ~ ":" ){,3} ~ ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,3} ~ "::" ~ ( ipv6_seg ~ ":" ){,2} ~ ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,4} ~ "::" ~ ( ipv6_seg ~ ":" ){,1} ~ ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,5} ~ "::" ~                          ipv6_seg
        | ipv6_seg ~ ( ":" ~ ipv6_seg ){,6} ~ "::"
        |                                     "::"
    }
    ipv6_seg = @{ ASCII_HEX_DIGIT{1,4} }
    ipv6_prefix_len = @{ ASCII_DIGIT{1,3} }

range_op = _{ range | exact | set_op }
    range = ${ "^" ~ num ~ "-" ~ num }
    exact = ${ "^" ~ num }
    set_op = _{ less_excl | less_incl }
        less_excl = @{ "^-" }
        less_incl = @{ "^+" }

and = _{ ^"AND" }
or  = _{ ^"OR" }
not = _{ ^"NOT" }

filter = _{ SOI ~ filter_expr ~ EOI }
    filter_expr = _{ filter_expr_and | filter_expr_or | filter_expr_not | filter_expr_unit }
        filter_expr_and  = { filter_term ~ and ~ filter_term }
        filter_expr_or   = { filter_term ~ or ~ filter_term }
        filter_expr_not  = { not ~ filter_term }
        filter_expr_unit = { filter_term }
            filter_term = _{ literal_filter | named_filter | "(" ~ filter_expr ~ ")" }
                literal_filter = ${ prefix_set ~ set_op? }
                    prefix_set = _{ literal_prefix_set | named_prefix_set }
                        literal_prefix_set = !{ "{" ~ ranged_prefix? ~ ( "," ~ ranged_prefix )* ~ ","? ~ "}" }
                            ranged_prefix = ${ ( ipv4_prefix | ipv6_prefix ) ~ range_op? }
                        named_prefix_set = { any_route | peeras | route_set | as_set | autnum }
                named_filter = { filter_set }
